	.xlist
;
; Z280RCIO.LIB  -  Z280RC Hardware I/O Port equates
;
; This file contains Z280 definitions taken from the July 1987
; "Zilog Z280(TM) MPU Microprocessing Unit Preliminary Technical Manual"
; for internal control registers and on-chip peripherals.
;
; It also contains Z280RC device specific I/O port definitions
; for the IDE CompactFlash interface, DS1203 timekeeper chip
; and the OX16C954 QuadSer serial interface board.
;
;
; Modification History
;
; 27-Jul-2018	Tony Nicholson	Initial version from CPU280 BIOS sources
;				file Z280EQU.MAC by Daniel A. Jacobs
;				dated 13-Mar-1988.
; 05-Dec-2018	Tony Nicholson	Added Interrupt and Trap Vector
;				Table related equates and System-Call
;				function definitions.
; 23-Jun-2020	Tony Nicholson	Added QuadSer module equates for the
;				OX16C954 quad serial port board.
;

;---------------------------------
;
; Z280 MPU internal devices
;

; Master Control Register (MCR) equates:	 Z280 manual	Page 5-77

msr	equ	0	; Master Status Register	Page 3-4
isr	equ	16h	; Interrupt Status Reg.		Page 3-4 & 3-5
itv	equ	6	; Interrupt/Trap Vector
			;   table pointer		Page 3-5 & 6-11
iop	equ	8	; I/O Page register	(8bit)	Page 3-5
bti	equ	0ffh	; Bus Timing and
			;   Initialization reg.	(8bit)	Page 3-1 & 3-2
btc	equ	2	; Bus Timing and
			;   Control register	(8bit)	Page 3-2
slr	equ	4	; Stack Limit Register		Page 3-6
tcr	equ	10h	; Trap Control Reg.	(8bit)	Page 3-5 & 3-6
ccr	equ	12h	; Cache Control Reg.	(8bit)	Page 3-3 & 3-4
lar	equ	14h	; Local (global)
			;   Address Register	(8bit)	Page 3-3

;---------------------------------

; Memory Management Unit (MMU) equates:	 Z280 manual	Page 7-6

mmup	equ	0ffh	; MMU Page I/O
mmcr	equ	0f0h	; MMU Master Control Reg.	Page 7-5
pdr	equ	0f1h	; Page Descripter Reg. pointer	Page 7-2 & 7-5
dsp	equ	0f5h	; Descriptor Select Port	Page 7-6
bmp	equ	0f4h	; Block Move Port		Page 7-6
ip	equ	0f2h	; Invalidation Port		Page 7-6

;---------------------------------

; Refresh Rate Register (RRR) equates:	Z280 manual	Page 9-1

rrrp	equ	0ffh	; RRR Page I/O
rrr	equ	0e8h	; Refresh Rate Register		Page 9-1

;---------------------------------

; Counter Timers (C/T) equates:		Z280 manual	Page 9-7

ctp	equ	0feh	; Counter/Timer Page I/O

cr0	equ	0e0h	; Configuration reg. for Counter/Timer 0	Page 9-5
cr1	equ	0e8h	; Configuration reg. for Counter/Timer 1	Page 9-5
cr2	equ	0f8h	; Configuration reg. for Counter/Timer 2	Page 9-5

cs0	equ	0e1h	; Command Status reg for Counter/Timer 0	Page 9-6
cs1	equ	0e9h	; Command Status reg for Counter/Timer 1	Page 9-6
cs2	equ	0f9h	; Command Status reg for Counter/Timer 2	Page 9-6

tc0	equ	0e2h	; Time Constant reg. for Counter/Timer 0	Page 9-6
tc1	equ	0eah	; Time Constant reg. for Counter/Timer 1	Page 9-6
tc2	equ	0fah	; Time Constant reg. for Counter/Timer 2	Page 9-6

ct0	equ	0e3h	; Count Time reg.    for Counter/Timer 0	Page 9-6
ct1	equ	0ebh	; Count Time reg.    for Counter/Timer 1	Page 9-6
ct2	equ	0fbh	; Count Time reg.    for Counter/Timer 2	Page 9-6

;---------------------------------

; Direct Memory Access (DMA) equates:	Z280 manual	Page 9-15

dmap	equ	0ffh	; DMA Page I/O
dmcr	equ	1fh	; DMA Master Control Register	Page 9-13 & 9-14

dal0	equ	0	; Destination Address Low DMA0	Page 9-14 & 9-15
dal1	equ	8	; Destination Address Low DMA1	Page 9-14 & 9-15
dal2	equ	10h	; Destination Address Low DMA2	Page 9-14 & 9-15
dal3	equ	18h	; Destination Address Low DMA3	Page 9-14 & 9-15

dah0	equ	1	; Destination Address High DMA0	Page 9-14 & 9-15
dah1	equ	9	; Destination Address High DMA1	Page 9-14 & 9-15
dah2	equ	11h	; Destination Address High DMA2	Page 9-14 & 9-15
dah3	equ	19h	; Destination Address High DMA3	Page 9-14 & 9-15

sal0	equ	2	; Source Address Low DMA0	Page 9-14 & 9-15
sal1	equ	0ah	; Source Address Low DMA1	Page 9-14 & 9-15
sal2	equ	12h	; Source Address Low DMA2	Page 9-14 & 9-15
sal3	equ	1ah	; Source Address Low DMA3	Page 9-14 & 9-15

sah0	equ	3	; Source Address High DMA0	Page 9-14 & 9-15
sah1	equ	0bh	; Source Address High DMA1	Page 9-14 & 9-15
sah2	equ	13h	; Source Address High DMA2	Page 9-14 & 9-15
sah3	equ	1bh	; Source Address High DMA3	Page 9-14 & 9-15

dcr0	equ	4	; Counter Register for DMA0	Page 9-14
dcr1	equ	0ch	; Counter Register for DMA1	Page 9-14
dcr2	equ	14h	; Counter Register for DMA2	Page 9-14
dcr3	equ	1ch	; Counter Register for DMA3	Page 9-14

tdr0	equ	5	; Transaction Descriptor DMA0	Page 9-13 & 9-14
tdr1	equ	0dh	; Transaction Descriptor DMA1	Page 9-13 & 9-14
tdr2	equ	15h	; Transaction Descriptor DMA2	Page 9-13 & 9-14
tdr3	equ	1dh	; Transaction Descriptor DMA3	Page 9-13 & 9-14

;---------------------------------

; Universal Asynchronous Receiver/Transmitter (UART) equates:   Page 9-20

uartp	equ	0feh	; UART Page I/O
ucr	equ	10h	; UART Configuration Reg.	Page 9-18
tcs	equ	12h	; Transmitter Control/Status	Page 9-19
rcs	equ	14h	; Receiver Control/Status reg.	Page 9-20
rdr	equ	16h	; Receiver Data Register
tdr	equ	18h	; Transmitter Data Register

uart$en	equ	10000000b ; Enable bit for TCS and RCS
tcstbe	equ	00000001b ; Transmit Buffer Empty bit
rcsdav	equ	00010000b ; Receive Data Available bit

; UART Configuration Register (UCR) bits

ucr$bcm	equ	11000000b ; BC field of UART control register
ucr$5bv	equ	00000000b	; 5-bits per character
ucr$6bv	equ	01000000b	; 6-bits
ucr$7bv	equ	10000000b	; 7-bits
ucr$8bv	equ	11000000b	; 8-bits
ucr$pm	equ	00100000b ; P - Parity bit enable
ucr$pv	equ	00100000b	; extra bit with parity
ucr$eom	equ	00010000b ; E/O - parity even / odd
ucr$ev	equ	00010000b	; Even Parity
ucr$ov	equ	00000000b	; Odd Parity
ucr$csm	equ	00001000b ; CS - Clock select
ucr$ct1v equ	00001000b	; Use Counter/Timer 1 output for clock
ucr$cexv equ	00000000b	; External clock input from Counter/Timer 1 input
ucr$crm	equ	00000110b ; CR - Clock Rate multiplier
ucr$x1v	equ	00000000b	; x1
ucr$x16v equ	00000010b	; x16
ucr$x32v equ	00000100b	; x32
ucr$x64v equ	00000110b	; x64
ucr$lbm	equ	00000001b ; LB - Loop Back Enable
ucr$lbv	equ	00000001b	; Local Loop back mode

;---------------------------------

; Bit Masks for Z280 Master Status Register and Interrupt Status Register

i$none	equ	00000000b ; No Interrupts
i$a	equ	00000001b ; Bit Value INTA Interrupt
i$ct0	equ	00000010b ; Bit Value Counter/Timer 0 & DMA0 Interrupt
i$dma0	equ	i$ct0
i$b	equ	00000100b ; Bit Value INTB Interrupt
i$ct1	equ	00001000b ; Bit Value Counter/Timer 1, UART Rx & DMA1 Interrupt
i$rx	equ	i$ct1
i$dma1	equ	i$ct1
i$c	equ	00010000b ; Bit Value INTC Interrupt
i$tx	equ	00100000b ; Bit Value UART Tx & DMA2 Interrupt
i$dma2	equ	i$tx
i$ct2	equ	01000000b ; Bit Value Counter/Timer 2 & DMA3 Interrupt
i$dma3	equ	i$ct2

;---------------------------------

; IDE CompactFlash Interface in 16-bit mode

cfp	equ	00h	; CF I/O page
cfdata	equ	0c0h	; CF data register (R/W)
cferr	equ	0c2h	; CF error register (R)
cffeat	equ	0c2h	; CF features register (W)
cfsectcnt equ	0c5h	; CF sector count
cf07	equ	0c7h	; CF LA0-7
cf815	equ	0c9h	; CF LA8-15
cf1623	equ	0cbh	; CF LA16..23
cf2427	equ	0cdh	; CF LA24..27 and LBA mode (bit 6 high)
cfstat	equ	0cfh	; CF status register (R)
cfcmd	equ	0cfh	; CF command register (W)

;---------------------------------

; DS1302 timekeeper clock chip

watchp	equ	00h	; DS1302 I/O page
watch	equ	0a2h	; DS1302 3-wire interface
w$sclk	equ	00000001b	; SCLK bit
w$nrst	equ	00000010b	; nRST bit
w$data	equ	10000000b	; data I/O bit

;---------------------------------

; QuadSer Rev 1 board serial ports on OX16C954 UART

qserp	equ	00h	; QuadSer I/O page
qser$base equ	0d0h	; QuadSer base address
qser0	equ	qser$base+00h	; channel 0
qser1	equ	qser$base+08h	; channel 1
qser2	equ	qser$base+10h	; channel 2
qser3	equ	qser$base+18h	; channel 3

; OX16C954 register offsets

qs_THR	equ	000b	; transmitter holding register
qs_RHR	equ	000b	; receiver holding register
qs_IER	equ	001b	; interrupt enable register
qs_FCR	equ	010b	; FIFO control register
qs_ISR	equ	010b	; interrupt status register
qs_LCR	equ	011b	; line control register
qs_MCR	equ	100b	; modem control register
qs_LSR	equ	101b	; line status register
qs_MSR	equ	110b	; modem status register
qs_SPR	equ	111b	; scratch pad register

; OX16C954 additional standard registers, accessed when LCR:7 is 1

qs_DLL	equ	000b	; divisor latch register, LSB
qs_DLM	equ	001b	; divisor latch register, MSB

; OX16C954 650-compatible registers, accessed when LCR is set to 0BFh

qs_EFR	equ	010b	; enhanced features register
qs_XON1	equ	100b	; automatic in-band flow control
qs_XON2	equ	101b	; automatic in-band flow control
qs_XOFF1	equ	110b	; automatic in-band flow control
qs_XOFF2	equ	111b	; automatic in-band flow control

; OX16C954 950-specific registers

qs_ASR	equ	001b	; additional status register
qs_RFL	equ	011b	; receiver FIFO fill level
qs_TFL	equ	100b	; transmitter FIFO fill level
qs_ICR	equ	101b	; indexed control register data

; OX16C954 indexed register set

qs_ACR	equ	00h	; additional control register
qs_CPR	equ	01h	; clock prescaler register
qs_TCR	equ	02h	; times control register
qs_CKS	equ	03h	; clock select register
qs_TTL	equ	04h	; transmitter interrupt trigger level
qs_RTL	equ	05h	; receiver interrupt trigger level
qs_FCL	equ	06h	; flow control level low
qs_FCH	equ	07h	; flow control level high
qs_ID1	equ	08h	; device identifier register
qs_ID2	equ	09h	; device identifier register
qs_ID3	equ	0ah	; device identifier register
qs_REV	equ	0bh	; 950 core revision
qs_CSR	equ	0ch	; channel software reset
qs_NMR	equ	0dh	; 9-bit mode register
qs_MDM	equ	0eh	; modem disable mask
qs_RFC	equ	0fh	; readable FCR
qs_GDS	equ	10h	; good data status register
qs_DMS	equ	11h	; DMA stattus register
qs_PIDX	equ	12h	; port index register
qs_CKA	equ	13h	; clock alteration register

; Common bit masks for the Line Status Register (LSR)

qsm$rxrdy equ	00000001b	; RxRDY (data available)
qsm$overrun equ	00000010b	; Overrun
qsm$parity equ	00000100b	; Parity error
qsm$framing equ	00001000b	; Framing error
qsm$rxbreak equ	00010000b	; Rx Break received
qsm$THRempty equ 00100000b	; Tx Holding Register (FIFO) empty
qsm$txempty equ	01000000b	; TxEmpty
qsm$dataerror equ 10000000b	; Data Error

; Line Control Register bit combinations

lcr_5_bit_data equ 00h		; 5-bit data
lcr_6_bit_data equ 01h		; 6-bit data
lcr_7_bit_data equ 02h		; 7-bit data
lcr_8_bit_data equ 03h		; 8-bit data
lcr_1_stop_bit equ 00h		; 1 stop bit
lcr_1_5_stop_bits equ 04h	; 1.5 stop bits (5-bit data only)
lcr_2_stop_bits equ 04h		; 2 stop bits
lcr_no_parity equ 00h		; no parity
lcr_odd_parity equ 08h		; odd parity
lcr_even_parity equ 18h		; even parity
lcr_force_high_parity equ 28h	; mark parity
lcr_force_low_parity equ 38h	; space parity
lcr_force_break equ 40h		; force break

; Common modes

lcr_8N1	equ	lcr_8_bit_data+lcr_1_stop_bit+lcr_no_parity
lcr_8N2	equ	lcr_8_bit_data+lcr_2_stop_bits+lcr_no_parity
lcr_8E1	equ	lcr_8_bit_data+lcr_1_stop_bit+lcr_even_parity
lcr_8E2	equ	lcr_8_bit_data+lcr_2_stop_bits+lcr_even_parity
lcr_8O1	equ	lcr_8_bit_data+lcr_1_stop_bit+lcr_odd_parity
lcr_8O2	equ	lcr_8_bit_data+lcr_2_stop_bits+lcr_odd_parity
lcr_7E2 equ	lcr_7_bit_data+lcr_2_stop_bits+lcr_even_parity
lcr_7O2	equ	lcr_7_bit_data+lcr_2_stop_bits+lcr_odd_parity
lcr_5E1_5 equ	lcr_5_bit_data+lcr_1_5_stop_bits+lcr_even_parity

; Baud Rate Divisors
;
; Uses RC2014 primary clock of 7.3728 MHz with
; the Clock Prescaler Register (CPR) set upon
; a hardware reset to 20h (divide by 4). This
; gives an effective UART clock of 1.8432MHz.
; The sample clock is x16.
;
; value = 1842000/(16xbaudrate)

d115k2	equ	0001h	; 115200 baud
d57k6	equ	0002h	;  57600 baud
d38k4	equ	0003h	;  38400 baud
d28k8	equ	0004h	;  28800 baud
d19k2	equ	0006h	;  19200 baud
d9k6	equ	000ch	;   9600 baud
d7k2	equ	0010h	;   7200 baud
d4k8	equ	0018h	;   4800 baud
d3k6	equ	0020h	;   3600 baud
d2k4	equ	0030h	;   2400 baud
d1k8	equ	0040h	;   1800 baud
d1k2	equ	0060h	;   1200 baud
d600	equ	00c0h	;    600 baud
d300	equ	0180h	;    300 baud
d150	equ	0300h	;    150 baud
d134	equ	035bh	;    134 baud
d110	equ	0417h	;    110 baud
d75	equ	0600h	;     75 baud
d50	equ	0900h	;     50 baud

;---------------------------------
;
; DMA convert 24-bit address to DMA parameter block address (2 words)
;
dmapbw	macro	bank,addr
	defw	addr or 0f000h
	defw	(bank shl 8) or (high addr) or 0000fh
	endm

;---------------------------------
;
; Z280 MPU work-around for OUTJMP defect which may be
; triggered by a cache pipe-line fault for an I/O write
; instruction followed by any jump instruction (for an
; external write with wait states).
;
outjmp	macro
	nop
	nop
	nop
	nop
	endm

;---------------------------------
;
; Calculate the Date in CP/M-3-Format
; (used for initialising RAM Drive)
;
; Before invoking the macro, ASET the
; variables $YEAR, $MONTH and $DAY.
; Returns the result in $DATE.

cpmdate	macro
$date	aset	($year-78)*365 + ($year-77) shr 2 + $day - 1
  if	(($year and 3) eq 0) and ($month gt 2)
$date	aset	$date+1
  endif
X$month	aset	$month
  irp	Md,<31,28,31,30,31,30,31,31,30,31,30,31>
    if	X$month gt 1
$date	aset	$date+Md
X$month	aset	X$month-1
    endif
  endm ; irp
	endm ; cpmdate

;
; Interrupt and Trap Vector Table offsets (Page 6-11)
;
itvtoff$nmi	equ	04h	; NMI vector
itvtoff$inta	equ	08h	; Interrupt line A vector
itvtoff$intb	equ	0ch	; Interrupt line B vector
itvtoff$intc	equ	10h	; Interrupt line C vector
itvtoff$tc0	equ	14h	; Counter/Timer 0 vector
itvtoff$tc1	equ	18h	; Counter/Timer 1 vector
itvtoff$tc2	equ	20h	; Counter/Timer 2 vector
itvtoff$dma0	equ	24h	; DMA channel 0 vector
itvtoff$dma1	equ	28h	; DMA channel 1 vector
itvtoff$dma2	equ	2ch	; DMA channel 2 vector
itvtoff$dma3	equ	30h	; DMA channel 3 vector
itvtoff$uar	equ	34h	; UART receiver vector
itvtoff$uat	equ	38h	; UART transmitter vector
itvtoff$ss	equ	3ch	; Single-Step trap vector
itvtoff$boh	equ	40h	; Breakpoint-on-Halt trap vector
itvtoff$dive	equ	44h	; Division Exception trap vector
itvtoff$stkovf equ	48h	; Stack Overflow Warning trap vector
itvtoff$accv	equ	4ch	; Access Violation trap vector
itvtoff$sc	equ	50h	; System Call trap vector
itvtoff$priv	equ	54h	; Privileged Instruction trap vector
itvtoff$mem2epu equ	58h	; EPU <- Memory Extended Instruction trap vector
itvtoff$epu2mem equ	5ch	; Memory <- EPU Extended Instruction trap vector
itvtoff$epu2a	equ	60h	; A <- EPU Extended Instruction trap vector
itvtoff$epuintop equ	64h	; EPU Internal Operation Extended Instr. trap vector
itvtoff$nmiav	equ	70h	; NMI Int A vectors (128 PC values)
itvtoff$ibv	equ	170h	; Int B vectors (128 PC values)
itvtoff$icv	equ	270h	; Int C vectors (128 PC values)

;
; System call function codes
;
sc$dummy equ	00000h
sc$sumode equ	0FF01h	; A=0 enter System-mode else User-mode

	.list
